#----------------------------------------------------------------------------
# Setup the project
cmake_minimum_required(VERSION 3.16...3.21)
project(userPrimaryGenerator)

#----------------------------------------------------------------------------
# Find Geant4 package, activating all available UI and Vis drivers by default
# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui
# to build a batch mode only executable
#
option(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()


##
find_package(GeoModelCore REQUIRED)
find_package(GeoModelIO REQUIRED)
find_package(GeoModelG4 REQUIRED)
##

#----------------------------------------------------------------------------
# Setup Geant4 include directories and compile definitions
#
include(${Geant4_USE_FILE})

#find_package(Pythia8 REQUIRED)
#find_package(GeoModel REQUIRED)
##
include_directories(${PROJECT_SOURCE_DIR}/include ${EIGEN3_INCLUDE_DIRS}  ${GeoModel_DIR}/include)
##


#----------------------------------------------------------------------------
# Locate sources and headers for this project
#

file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)

#----------------------------------------------------------------------------
# Add the executable, and link it to the Geant4 libraries
#
add_executable(userPrimaryGenerator userPrimaryGenerator.cc ${sources} ${headers})
##
find_library(GeoModelDBManager_LIB NAMES GeoModelDBManager PATHS ${GeoModel_DIR}/lib)
find_library(GeoModelRead_LIB NAMES GeoModelRead PATHS ${GeoModel_DIR}/lib)
find_library(GeoModelKernel_LIB NAMES GeoModelKernel PATHS ${GeoModel_DIR}/lib)
find_library(GeoModelG4_LIB NAMES GeoModel2G4 PATHS ${GeoModel_DIR}/lib)

set(GeoModel_LIBS ${GeoModelDBManager_LIB} ${GeoModelRead_LIB} ${GeoModelKernel_LIB} ${GeoModelG4_LIB})
target_link_libraries( userPrimaryGenerator GeoModelIO::GeoModelDBManager GeoModelIO::GeoModelRead GeoModelCore::GeoModelKernel GeoModel2G4 Eigen3::Eigen ${Geant4_LIBRARIES})
##






#${PYTHIA8_LIBRARIES} ${GeoModel_LIBRARIES} )

#----------------------------------------------------------------------------
# Copy all scripts to the build directory, i.e. the directory in which we
# build userPrimaryGenerator. This is so that we can run the executable directly because it
# relies on these scripts being in the current working directory.
#
set(userPrimaryGenerator_SCRIPTS
    userPrimaryGenerator.in run1.mac vis.mac
  )

foreach(_script ${userPrimaryGenerator_SCRIPTS})
  configure_file(
    ${PROJECT_SOURCE_DIR}/${_script}
    ${PROJECT_BINARY_DIR}/${_script}
    COPYONLY
    )
endforeach()

#----------------------------------------------------------------------------
# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX
#
install(TARGETS userPrimaryGenerator DESTINATION bin)
